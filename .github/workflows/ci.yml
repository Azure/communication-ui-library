name: CI

on:
  # Postsubmit CI on main.
  push:
    branches: [main]
  # Presubmit CI on PRs to all branches.
  pull_request:
  # Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch:

jobs:
  build_packages:
    name: Build Packages
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - flavor: 'beta'
          - flavor: 'stable'
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE so job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # Ensure node version is great enough
      - name: Use Node.js v14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      # Try get node_modules from cache
      - name: Restore node_modules from cache
        uses: actions/cache@v2
        with:
          path: common/temp/pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('common/config/rush/pnpm-lock.yaml') }}
      # Install dependencies
      - name: Install rush
        run: npm install -g @microsoft/rush@5.47.0
      - name: Install dependencies
        run: rush install
      # Switch flavor if necessary
      - name: Switch flavor for stable build
        if: ${{ matrix.flavor == 'stable' }}
        run: rush switch-flavor:stable
      # Perform changelog check
      - name: Check the necessary change file has been submitted
        run: rush changelog:check
      # Perform lint check
      - name: Run linter
        run: rush lint
      # Builds
      - name: Build Packages
        run: rush build -t @azure/communication-react
      # Verify no uncommitted api extractor changes
      - name: API Extractor Check
        run: |
          DIFF_FILE="APIChanges.diff"
          git diff --output=$DIFF_FILE --exit-code ${{ matrix.flavor != 'stable' && '**/review/**' ||  '**/stable-review/**'  }}.md
          DIFF_STATUS=$?
          echo "Exit code for git diff for changes in api review files: $DIFF_STATUS"
          if [$DIFF_STATUS -ne 0]
          then
              echo "API CHANGES FOUND - PLEASE RUN 'rushx api-extractor' IN THE APPROPRIATE PACKAGE(S)"
              echo "Changes:"
              cat $DIFF_FILE
              exit 1
          else
            echo "Success, no new api changes found."
          fi
      # Tree-shaking check
      - name: Treeshaking check
        run: rush build --only @internal/check-treeshaking
      - name: Ensure all package versions are consistent
        run: rush ensure-consistent-versions
      # Tests
      - name: Test Packages
        run: rush test -t @azure/communication-react

  call_composite_automation_test:
    name: Call Composite automation test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - flavor: 'beta'
          - flavor: 'stable'
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE so job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # Ensure node version is great enough
      - name: Use Node.js v14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      # Try get node_modules from cache
      - name: Restore node_modules from cache
        uses: actions/cache@v2
        with:
          path: common/temp/pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('common/config/rush/pnpm-lock.yaml') }}
      # Install dependencies
      - name: Install rush
        run: npm install -g @microsoft/rush@5.47.0
      - name: Install dependencies
        run: rush install
      # Switch flavor if necessary
      - name: Switch flavor for stable build
        if: ${{ matrix.flavor == 'stable' }}
        run: rush switch-flavor:stable
      # Tests
      - name: Build Call Composite Test App
        run: |
          cd packages/react-composites
          rushx build:e2e:call
      - name: Call Composite Visual Regression Tests
        id: visualregressiontests
        run: |
          cd packages/react-composites
          rushx test:e2e:call
        env:
          CONNECTION_STRING: ${{ secrets.CONNECTION_STRING }}
      - name: Upload snapshot diff
        if: ${{ always() && steps.visualregressiontests.outcome == 'failure' }}
        uses: actions/upload-artifact@v2
        with:
          name: snapshots
          path: packages/react-composites/test-results
      - name: Comment on PR
        if: ${{ github.event_name == 'pull_request' && always() && steps.visualregressiontests.outcome == 'failure' && !contains( github.event.pull_request.labels.*.name, 'ui change') }}
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Failed to pass the UI Test. If this PR is for UI change and the error is snapshot mismatch, please add "ui change" label to the PR for updating the snapshot.'
            })

  chat_composite_automation_test:
    name: Chat Composite automation test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - flavor: 'beta'
          - flavor: 'stable'
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE so job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # Ensure node version is great enough
      - name: Use Node.js v14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      # Try get node_modules from cache
      - name: Restore node_modules from cache
        uses: actions/cache@v2
        with:
          path: common/temp/pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('common/config/rush/pnpm-lock.yaml') }}
      # Install dependencies
      - name: Install rush
        run: npm install -g @microsoft/rush@5.47.0
      - name: Install dependencies
        run: rush install
      # Switch flavor if necessary
      - name: Switch flavor for stable build
        if: ${{ matrix.flavor == 'stable' }}
        run: rush switch-flavor:stable
      # Tests
      - name: Build Chat Composite Test App
        run: |
          cd packages/react-composites
          rushx build:e2e:chat
      - name: Chat Composite Visual Regression Tests
        id: visualregressiontests
        run: |
          cd packages/react-composites
          rushx test:e2e:chat
        env:
          CONNECTION_STRING: ${{ secrets.CONNECTION_STRING }}
      - name: Upload snapshot diff
        if: ${{ always() && steps.visualregressiontests.outcome == 'failure' }}
        uses: actions/upload-artifact@v2
        with:
          name: snapshots
          path: packages/react-composites/test-results
      - name: Comment on PR
        if: ${{ github.event_name == 'pull_request' && always() && steps.visualregressiontests.outcome == 'failure' && !contains( github.event.pull_request.labels.*.name, 'ui change') }}
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Failed to pass the UI Test. If this PR is for UI change and the error is snapshot mismatch, please add "ui change" label to the PR for updating the snapshot.'
            })

  meeting_composite_automation_test:
    name: Meeting Composite automation test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # Meeting composite only work for beta
          - flavor: 'beta'
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE so job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # Ensure node version is great enough
      - name: Use Node.js v14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      # Try get node_modules from cache
      - name: Restore node_modules from cache
        uses: actions/cache@v2
        with:
          path: common/temp/pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('common/config/rush/pnpm-lock.yaml') }}
      # Install dependencies
      - name: Install rush
        run: npm install -g @microsoft/rush@5.47.0
      - name: Install dependencies
        run: rush install
      # Switch flavor if necessary
      - name: Switch flavor for stable build
        if: ${{ matrix.flavor == 'stable' }}
        run: rush switch-flavor:stable
      # Tests
      - name: Build Meeting Composite Test App
        run: |
          cd packages/react-composites
          rushx build:e2e:meeting
      - name: Meeting Composite Visual Regression Tests
        id: visualregressiontests
        run: |
          cd packages/react-composites
          rushx test:e2e:meeting
        env:
          CONNECTION_STRING: ${{ secrets.CONNECTION_STRING }}
      - name: Upload snapshot diff
        if: ${{ always() && steps.visualregressiontests.outcome == 'failure' }}
        uses: actions/upload-artifact@v2
        with:
          name: snapshots
          path: packages/react-composites/test-results
      - name: Comment on PR
        if: ${{ github.event_name == 'pull_request' && always() && steps.visualregressiontests.outcome == 'failure' && !contains( github.event.pull_request.labels.*.name, 'ui change') }}
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Failed to pass the composite UI Test. If this PR is for UI change and the error is snapshot mismatch, please add "ui change" label to the PR for updating the snapshot.'
            })

  build_storybook:
    name: Build Storybook
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js v14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Restore node_modules from cache
        uses: actions/cache@v2
        with:
          path: common/temp/pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('common/config/rush/pnpm-lock.yaml') }}
      - name: Install rush
        run: npm install -g @microsoft/rush@5.47.0
      - name: Install dependencies
        run: rush install
      - name: Build
        run: rush build -o storybook
      - name: Tests
        run: rushx test
        working-directory: packages/storybook

  build_calling_sample:
    name: Build Calling Sample
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - flavor: 'beta'
          - flavor: 'stable'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js v14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Restore node_modules from cache
        uses: actions/cache@v2
        with:
          path: common/temp/pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('common/config/rush/pnpm-lock.yaml') }}
      - name: Install rush
        run: npm install -g @microsoft/rush@5.47.0
      - name: Install dependencies
        run: rush install
      # Switch flavor if necessary
      - name: Switch flavor for stable build
        if: ${{ matrix.flavor == 'stable' }}
        run: rush switch-flavor:stable
      - name: Build
        run: rush build -o calling
      - name: Tests
        run: rush test -o calling

  build_chat_sample:
    name: Build Chat Sample
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - flavor: 'beta'
          - flavor: 'stable'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js v14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Restore node_modules from cache
        uses: actions/cache@v2
        with:
          path: common/temp/pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('common/config/rush/pnpm-lock.yaml') }}
      - name: Install rush
        run: npm install -g @microsoft/rush@5.47.0
      - name: Install dependencies
        run: rush install
      # Switch flavor if necessary
      - name: Switch flavor for stable build
        if: ${{ matrix.flavor == 'stable' }}
        run: rush switch-flavor:stable
      - name: Build
        run: rush build -o chat
      - name: Tests
        run: rush test -o chat

  build_static_html_composites_sample:
    name: Build And Test Static HTML Composites Sample
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - flavor: 'beta'
          - flavor: 'stable'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js v14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Install rush
        run: npm install -g @microsoft/rush@5.47.0
      - name: Install dependencies
        run: rush install
      # Switch flavor if necessary
      - name: Switch flavor for stable build
        if: ${{ matrix.flavor == 'stable' }}
        run: rush switch-flavor:stable
      - name: Build
        run: rush build -t sample-static-html-composites
      - name: Visual Regression Tests
        id: visualregressiontests
        run: |
          cd samples/tests
          rushx test:e2e:bundle
        env:
          CONNECTION_STRING: ${{ secrets.CONNECTION_STRING }}
      - name: Upload snapshot diff
        if: ${{ always() && steps.visualregressiontests.outcome == 'failure' }}
        uses: actions/upload-artifact@v2
        with:
          name: snapshots
          path: samples/tests/test-results/ # or path/to/artifact
      - name: Comment on PR
        if: ${{ github.event_name == 'pull_request' && always() && steps.visualregressiontests.outcome == 'failure' && !contains( github.event.pull_request.labels.*.name, 'ui change') }}
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Failed to pass the Static HTML UI Test. If this PR is for UI change and the error is snapshot mismatch, please add "ui change" label to the PR for updating the snapshot.'
            })

  build_component_examples:
    name: Build And Test Component+Binding Examples
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - flavor: 'beta'
          - flavor: 'stable'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js v14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Install rush
        run: npm install -g @microsoft/rush@5.47.0
      - name: Install dependencies
        run: rush install
      # Switch flavor when necessary
      - name: Switch flavor for stable build
        if: ${{ matrix.flavor == 'stable' }}
        run: rush switch-flavor:stable
      - name: Build
        run: rush build -t component-examples
      - name: Visual Regression Tests
        id: visualregressiontests
        run: |
          cd samples/tests
          rushx test:e2e:examples
        env:
          CONNECTION_STRING: ${{ secrets.CONNECTION_STRING }}
      - name: Upload snapshot diff
        if: ${{ always() && steps.visualregressiontests.outcome == 'failure' }}
        uses: actions/upload-artifact@v2
        with:
          name: snapshots
          path: samples/tests/test-results/ # or path/to/artifact
      - name: Comment on PR
        if: ${{ github.event_name == 'pull_request' && always() && steps.visualregressiontests.outcome == 'failure' && !contains( github.event.pull_request.labels.*.name, 'ui change') }}
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Failed to pass the component examples UI Test. If this PR is for UI change and the error is snapshot mismatch, please add "ui change" label to the PR for updating the snapshot.'
            })

  check_failure:
    runs-on: ubuntu-latest
    needs:
      [build_packages, build_calling_sample, build_chat_sample, build_static_html_composites_sample, build_storybook]
    if: failure() && github.ref == 'refs/heads/main'
    name: File issue if main CI failed
    steps:
      # Create a GitHub issue if the CI failed when running on the `main` branch
      - name: Create issue if main branch CI failed
        id: create-issue
        run: |
          # check for an issue that is already open
          curl -H "Accept: application/vnd.github.v3+json" https://api.github.com/search/issues?q=org:Azure+repo:communication-ui-library+label:CI_FAILURE+state:open > $HOME/ci_issues.json
          issue_count=$(jq -r '.total_count' $HOME/ci_issues.json)
          if [ $issue_count -gt 0 ]; then
            echo "No need to create new issue, one already exists"
          else
            curl -X POST -H 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' https://api.github.com/repos/Azure/communication-ui-library/issues -d '{"title":"Main branch CI Failed", "body": "Main CI Pipeline has failed. Please investigate.", "labels":["CI_FAILURE"]}'
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
