name: CI

on:
  # Postsubmit CI on main.
  push:
    branches: [main]
  # Presubmit CI on PRs to all branches.
  pull_request:
  # Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch:

# cancel workflow when a newer version of the workflow is triggered on the same github ref
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # get matrix for ci-jobs
  get_matrix:
    name: Set CI flavors
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.get-matrix.outputs.matrix }}
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE so job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # Ensure node version is great enough
      - name: Use Node.js v14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      # gets the matrix for ci run from the config file
      - id: get-matrix
        run: echo "::set-output name=matrix::{\"include\":[{\"flavor\":\"stable\"},{\"flavor\":\"beta\"}]}"

  build_packages:
    needs: get_matrix
    name: Build Packages
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.get_matrix.outputs.matrix) }}
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE so job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # Ensure node version is great enough
      - name: Use Node.js v14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      # Try get node_modules from cache
      - name: Restore node_modules from cache
        uses: actions/cache@v2
        with:
          path: common/temp/pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('common/config/rush/pnpm-lock.yaml') }}
      # Install dependencies
      - name: Install rush
        run: npm install -g @microsoft/rush@5.47.0
      - name: Install dependencies
        run: rush install
      # Switch flavor if necessary
      - name: Switch flavor for stable build
        id: switch-flavor
        if: ${{ matrix.flavor == 'stable' }}
        run: rush switch-flavor:stable
      - name: Check result of flavor switch
        if: ${{ always() && steps.switch-flavor.outcome == 'failure' }}
        run: echo "Failed to switch to stable flavor, please make sure you run 'rush update:stable' if dependencies were updated." && exit 1
      # Perform changelog check
      - name: Check the necessary change file has been submitted
        run: rush changelog:check
      # Perform lint check
      - name: Run linter
        run: rush lint
      # Type check test folder
      - name: Type check test folder
        run: cd packages/react-composites && rushx tsc:e2e
      # Builds
      - name: Build Packages
        run: rush build -t @azure/communication-react
      # Verify no uncommitted api extractor changes
      - name: API Extractor Check
        if: ${{ always() }}
        run: |
          if [[ -z $(git status ${{ matrix.flavor != 'stable' && '**/review/beta/**' ||  '**/review/stable/**'  }}.md -s) ]]
          then
            echo "Success, no new api changes found."
          else
            echo "API CHANGES FOUND in ${{ matrix.flavor }} flavor - PLEASE RUN \"${{ matrix.flavor == 'stable' && 'rush switch-flavor:stable &&' || '' }} rush build -t @azure/communication-react\""
            echo "Changes:"
            git status ${{ matrix.flavor != 'stable' && '**/review/beta/**' ||  '**/review/stable/**'  }}.md -s
            exit 1
          fi
      # Tree-shaking check
      - name: Treeshaking check
        run: rush build --only @internal/check-treeshaking
      - name: Ensure all package versions are consistent
        run: rush ensure-consistent-versions
      # Tests
      - name: Test Packages
        run: rush test -t @azure/communication-react
      # Upload azure-communication api.md files for easy access
      - name: Upload communication-react api files
        uses: actions/upload-artifact@v2
        with:
          name: communication-react.${{ matrix.flavor }}.api.json
          path: |
            packages/communication-react/temp/communication-react.api.json

  call_composite_automation_test:
    needs: get_matrix
    name: Call Composite automation test
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.get_matrix.outputs.matrix) }}
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE so job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # Ensure node version is great enough
      - name: Use Node.js v14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      # Try get node_modules from cache
      - name: Restore node_modules from cache
        uses: actions/cache@v2
        with:
          path: common/temp/pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('common/config/rush/pnpm-lock.yaml') }}
      # Install dependencies
      - name: Install rush
        run: npm install -g @microsoft/rush@5.47.0
      - name: Install dependencies
        run: rush install
      # Switch flavor if necessary
      - name: Switch flavor for stable build
        if: ${{ matrix.flavor == 'stable' }}
        run: rush switch-flavor:stable
      # Tests
      - name: Build Call Composite Test App
        run: |
          cd packages/react-composites
          rushx build:e2e:call
      - name: Call Composite Visual Regression Tests
        id: visualregressiontests
        run: |
          cd packages/react-composites
          rushx test:e2e:call
        env:
          CONNECTION_STRING: ${{ secrets.CONNECTION_STRING }}
      - name: Upload playwright test results
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: e2e-results-${{ github.run_id }}-${{ github.run_attempt }}-${{ matrix.flavor }}-call.json
          path: packages/react-composites/test-results/e2e-results.json
          if-no-files-found: error
      - name: Upload snapshot diff
        if: ${{ always() && steps.visualregressiontests.outcome == 'failure' }}
        uses: actions/upload-artifact@v2
        with:
          name: snapshots
          path: packages/react-composites/test-results
      - name: Comment on PR
        if: ${{ github.event_name == 'pull_request' && always() && steps.visualregressiontests.outcome == 'failure' && !contains( github.event.pull_request.labels.*.name, 'ui change') }}
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Failed to pass the UI Test. If this PR is for UI change and the error is snapshot mismatch, please add "ui change" label to the PR for updating the snapshot.'
            })

  chat_composite_automation_test:
    needs: get_matrix
    name: Chat Composite automation test
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.get_matrix.outputs.matrix) }}
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE so job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # Ensure node version is great enough
      - name: Use Node.js v14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      # Try get node_modules from cache
      - name: Restore node_modules from cache
        uses: actions/cache@v2
        with:
          path: common/temp/pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('common/config/rush/pnpm-lock.yaml') }}
      # Install dependencies
      - name: Install rush
        run: npm install -g @microsoft/rush@5.47.0
      - name: Install dependencies
        run: rush install
      # Switch flavor if necessary
      - name: Switch flavor for stable build
        if: ${{ matrix.flavor == 'stable' }}
        run: rush switch-flavor:stable
      # Tests
      - name: Build Chat Composite Test App
        run: |
          cd packages/react-composites
          rushx build:e2e:chat
      - name: Chat Composite Visual Regression Tests
        id: visualregressiontests
        run: |
          cd packages/react-composites
          rushx test:e2e:chat
        env:
          CONNECTION_STRING: ${{ secrets.CONNECTION_STRING }}
      - name: Upload playwright test results
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: e2e-results-${{ github.run_id }}-${{ github.run_attempt }}-${{ matrix.flavor }}-chat.json
          path: packages/react-composites/test-results/e2e-results.json
          if-no-files-found: error
      - name: Upload snapshot diff
        if: ${{ always() && steps.visualregressiontests.outcome == 'failure' }}
        uses: actions/upload-artifact@v2
        with:
          name: snapshots
          path: packages/react-composites/test-results
      - name: Comment on PR
        if: ${{ github.event_name == 'pull_request' && always() && steps.visualregressiontests.outcome == 'failure' && !contains( github.event.pull_request.labels.*.name, 'ui change') }}
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Failed to pass the UI Test. If this PR is for UI change and the error is snapshot mismatch, please add "ui change" label to the PR for updating the snapshot.'
            })

  call_with_chat_composite_automation_test:
    needs: get_matrix
    name: Call With Chat Composite automation test
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.get_matrix.outputs.matrix) }}
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE so job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # Ensure node version is great enough
      - name: Use Node.js v14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      # Try get node_modules from cache
      - name: Restore node_modules from cache
        uses: actions/cache@v2
        with:
          path: common/temp/pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('common/config/rush/pnpm-lock.yaml') }}
      # Install dependencies
      - name: Install rush
        run: npm install -g @microsoft/rush@5.47.0
      - name: Install dependencies
        run: rush install
      # Switch flavor if necessary
      - name: Switch flavor for stable build
        if: ${{ matrix.flavor == 'stable' }}
        run: rush switch-flavor:stable
      # Tests
      - name: Build CallWithChatComposite Test App
        run: |
          cd packages/react-composites
          rushx build:e2e:callwithchat
      - name: CallWithChatComposite Visual Regression Tests
        id: visualregressiontests
        run: |
          cd packages/react-composites
          rushx test:e2e:callwithchat
        env:
          CONNECTION_STRING: ${{ secrets.CONNECTION_STRING }}
      - name: Upload playwright test results
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: e2e-results-${{ github.run_id }}-${{ github.run_attempt }}-${{ matrix.flavor }}-callwithchat.json
          path: packages/react-composites/test-results/e2e-results.json
          if-no-files-found: error
      - name: Upload snapshot diff
        if: ${{ always() && steps.visualregressiontests.outcome == 'failure' }}
        uses: actions/upload-artifact@v2
        with:
          name: snapshots
          path: packages/react-composites/test-results
      - name: Comment on PR
        if: ${{ github.event_name == 'pull_request' && always() && steps.visualregressiontests.outcome == 'failure' && !contains( github.event.pull_request.labels.*.name, 'ui change') }}
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Failed to pass the composite UI Test. If this PR is for UI change and the error is snapshot mismatch, please add "ui change" label to the PR for updating the snapshot.'
            })

  build_storybook:
    name: Build Storybook
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js v14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Restore node_modules from cache
        uses: actions/cache@v2
        with:
          path: common/temp/pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('common/config/rush/pnpm-lock.yaml') }}
      - name: Install rush
        run: npm install -g @microsoft/rush@5.47.0
      - name: Install dependencies
        run: rush install
      - name: Build
        run: rush build -o storybook
      - name: Tests
        run: rushx test
        working-directory: packages/storybook

  build_calling_sample:
    needs: get_matrix
    name: Build Calling Sample
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.get_matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js v14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Restore node_modules from cache
        uses: actions/cache@v2
        with:
          path: common/temp/pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('common/config/rush/pnpm-lock.yaml') }}
      - name: Install rush
        run: npm install -g @microsoft/rush@5.47.0
      - name: Install dependencies
        run: rush install
      # Switch flavor if necessary
      - name: Switch flavor for stable build
        if: ${{ matrix.flavor == 'stable' }}
        run: rush switch-flavor:stable
      - name: Build
        run: rush build -o calling
      - name: Tests
        run: rush test -o calling
      # upload bundle stats.json which will be consumed later
      - uses: actions/upload-artifact@v3
        if: ${{ matrix.flavor == 'beta'}}
        with:
          name: Calling-report
          path: samples/Calling/dist/build/report.json

  build_chat_sample:
    needs: get_matrix
    name: Build Chat Sample
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.get_matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js v14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Restore node_modules from cache
        uses: actions/cache@v2
        with:
          path: common/temp/pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('common/config/rush/pnpm-lock.yaml') }}
      - name: Install rush
        run: npm install -g @microsoft/rush@5.47.0
      - name: Install dependencies
        run: rush install
      # Switch flavor if necessary
      - name: Switch flavor for stable build
        if: ${{ matrix.flavor == 'stable' }}
        run: rush switch-flavor:stable
      - name: Build
        run: rush build -o chat
      - name: Tests
        run: rush test -o chat
      # upload bundle stats.json which will be consumed later
      - uses: actions/upload-artifact@v3
        if: ${{ matrix.flavor == 'beta'}}
        with:
          name: Chat-report
          path: samples/Chat/dist/build/report.json

  build_call_with_chat_sample:
    needs: get_matrix
    name: Build CallWithChat Sample
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.get_matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js v14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Restore node_modules from cache
        uses: actions/cache@v2
        with:
          path: common/temp/pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('common/config/rush/pnpm-lock.yaml') }}
      - name: Install rush
        run: npm install -g @microsoft/rush@5.47.0
      - name: Install dependencies
        run: rush install
      # Switch flavor if necessary
      - name: Switch flavor for stable build
        if: ${{ matrix.flavor == 'stable' }}
        run: rush switch-flavor:stable
      - name: Build
        run: rush build -o callwithchat
      - name: Tests
        run: rush test -o callwithchat
      # upload bundle stats.json which will be consumed later
      - uses: actions/upload-artifact@v3
        if: ${{ matrix.flavor == 'beta'}}
        with:
          name: CallWithChat-report
          path: samples/CallWithChat/dist/build/report.json

  build_static_html_composites_sample:
    needs: get_matrix
    name: Build And Test Static HTML Composites Sample
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.get_matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js v14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Install rush
        run: npm install -g @microsoft/rush@5.47.0
      - name: Install dependencies
        run: rush install
      # Switch flavor if necessary
      - name: Switch flavor for stable build
        if: ${{ matrix.flavor == 'stable' }}
        run: rush switch-flavor:stable
      - name: Build
        run: rush build -t sample-static-html-composites
      - name: Visual Regression Tests
        id: visualregressiontests
        run: |
          cd samples/tests
          rushx test:e2e:bundle
        env:
          CONNECTION_STRING: ${{ secrets.CONNECTION_STRING }}
      - name: Upload snapshot diff
        if: ${{ always() && steps.visualregressiontests.outcome == 'failure' }}
        uses: actions/upload-artifact@v2
        with:
          name: snapshots
          path: samples/tests/test-results/ # or path/to/artifact
      - name: Comment on PR
        if: ${{ github.event_name == 'pull_request' && always() && steps.visualregressiontests.outcome == 'failure' && !contains( github.event.pull_request.labels.*.name, 'ui change') }}
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Failed to pass the Static HTML UI Test. If this PR is for UI change and the error is snapshot mismatch, please add "ui change" label to the PR for updating the snapshot.'
            })

  build_component_examples:
    needs: get_matrix
    name: Build And Test Component+Binding Examples
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.get_matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js v14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Install rush
        run: npm install -g @microsoft/rush@5.47.0
      - name: Install dependencies
        run: rush install
      # Switch flavor when necessary
      - name: Switch flavor for stable build
        if: ${{ matrix.flavor == 'stable' }}
        run: rush switch-flavor:stable
      - name: Build
        run: rush build -t component-examples
      - name: Visual Regression Tests
        id: visualregressiontests
        run: |
          cd samples/tests
          rushx test:e2e:examples
        env:
          CONNECTION_STRING: ${{ secrets.CONNECTION_STRING }}
      - name: Upload snapshot diff
        if: ${{ always() && steps.visualregressiontests.outcome == 'failure' }}
        uses: actions/upload-artifact@v2
        with:
          name: snapshots
          path: samples/tests/test-results/ # or path/to/artifact
      - name: Comment on PR
        if: ${{ github.event_name == 'pull_request' && always() && steps.visualregressiontests.outcome == 'failure' && !contains( github.event.pull_request.labels.*.name, 'ui change') }}
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Failed to pass the component examples UI Test. If this PR is for UI change and the error is snapshot mismatch, please add "ui change" label to the PR for updating the snapshot.'
            })

  compare_base_bundle_stats:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    name: Compare bundle size from pr head ref to base ref - ${{ matrix.app }}
    needs: [build_calling_sample, build_chat_sample, build_call_with_chat_sample]
    strategy:
      matrix:
        include:
          # These are gist to track bundle sizes
          - app: Chat
            gist: https://gist.github.com/communication-ui-bot/db13fa7067b083b7a91d7a95adf28be1
          - app: Calling
            gist: https://gist.github.com/communication-ui-bot/87d57b63bbbaee12273a9a901b67885c
          - app: CallWithChat
            gist: https://gist.github.com/communication-ui-bot/72a7fca0af8a3c5b37f966bb6d4bcd11
    steps:
      # checkout base bundle stats
      - name: Get bundle stats of main from gist
        run: curl -o base/report.json "${{ matrix.gist }}/raw/${{ matrix.app }}-report.json" --create-dirs -L
      - uses: actions/download-artifact@v3
        with:
          path: current
          name: ${{ matrix.app }}-report
      - name: Use Node.js v14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Calculate size change
        id: bundles
        run: |
          base_size=$(jq -r ".[0].parsedSize" base/report.json)
          echo "::set-output name=base_size::${base_size}"
          current_size=$(jq -r ".[0].parsedSize" current/report.json)
          echo "::set-output name=current_size::${current_size}"
          change=$([ $current_size -gt $base_size ] && echo "increased❗" || ([ $current_size = $base_size ] && echo "not changed" || echo "decreased✅"))
          echo "::set-output name=change::${change}"
          echo "::set-output name=diff::$(($current_size - $base_size))"
      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: '## ${{ matrix.app }} bundle size is'
      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## ${{ matrix.app }} bundle size is ***${{ steps.bundles.outputs.change }}***.
            - Current size: ${{ steps.bundles.outputs.current_size }}
            - Base size: ${{ steps.bundles.outputs.base_size}}
            - Diff size: ${{ steps.bundles.outputs.diff}}
          edit-mode: replace

  update_base_bundle_report:
    runs-on: ubuntu-latest
    name: Upload bundle size report to gist - ${{ matrix.app }}
    needs: [build_calling_sample, build_chat_sample, build_call_with_chat_sample]
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        include:
          # These are gist to track bundle sizes
          - app: Chat
            gist_id: db13fa7067b083b7a91d7a95adf28be1
          - app: Calling
            gist_id: 87d57b63bbbaee12273a9a901b67885c
          - app: CallWithChat
            gist_id: 72a7fca0af8a3c5b37f966bb6d4bcd11
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.app }}-report
      - name: Upload bundle report to gist
        uses: exuanbo/actions-deploy-gist@v1
        with:
          token: ${{ secrets.MACHINE_ACCOUNT_PAT }}
          gist_id: ${{ matrix.gist_id }}
          gist_description: 'Bundle report for tracking ${{ matrix.app }} sample app'
          gist_file_name: ${{ matrix.app }}-report.json
          file_path: report.json

  check_failure:
    runs-on: ubuntu-latest
    needs:
      [build_packages, build_calling_sample, build_chat_sample, build_static_html_composites_sample, build_storybook]
    if: failure() && github.ref == 'refs/heads/main'
    name: File issue if main CI failed
    steps:
      # Create a GitHub issue if the CI failed when running on the `main` branch
      - name: Create issue if main branch CI failed
        id: create-issue
        run: |
          # check for an issue that is already open
          curl -H "Accept: application/vnd.github.v3+json" https://api.github.com/search/issues?q=org:Azure+repo:communication-ui-library+label:CI_FAILURE+state:open > $HOME/ci_issues.json
          issue_count=$(jq -r '.total_count' $HOME/ci_issues.json)
          if [ $issue_count -gt 0 ]; then
            echo "No need to create new issue, one already exists"
          else
            curl -X POST -H 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' https://api.github.com/repos/Azure/communication-ui-library/issues -d '{"title":"Main branch CI Failed", "body": "Main CI Pipeline has failed. Please investigate.", "labels":["CI_FAILURE"]}'
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
