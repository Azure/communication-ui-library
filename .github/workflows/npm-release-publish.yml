name: Release branch - Publish npm package

on:
  workflow_dispatch:
    inputs:
      npm-tag:
        description: 'Npm tag for the release, e.g. latest, next, dev'
        required: true
      release-flavor:
        description: 'Beta release or stable release. Will be determined by branch name if left empty.'
        required: false

jobs:
  publish:
    environment:
      name: npm
      url: https://www.npmjs.com/package/@azure/communication-react
    name: Publish release
    runs-on: ubuntu-latest
    steps:
      # Check-out repo
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Ensure node version is great enough
      - name: Use Node.js v14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      # Install dependencies
      - name: Install rush
        run: npm install -g @microsoft/rush@5.47.0
      - name: Install dependencies
        run: rush install

      # Switch flavor to stable when it is release branch
      - name: Switch flavor for stable build
        # If no param for release flavor, get it from branch name
        if: ${{ !github.event.inputs.release-flavor && !contains(github.ref, 'beta') || github.event.inputs.release-flavor == 'stable' }}
        run: rush switch-flavor:stable

      # Builds
      - name: Build Packages and Samples
        run: rush build

      # Run tests
      - name: Run Tests
        run: rush test
        env:
          CI: true

      # Retrieve version to tag and publish release with
      - name: Retrieve version from package.json
        id: version
        run: |
          ver=$(jq -r .version packages/communication-react/package.json)
          echo version: $ver
          echo "::set-output name=version::$ver"

      # Push git tags
      - name: Create and push git tags
        run: |
          git tag ${{ steps.version.outputs.version }}
          git push --tags

      # Upload releases
      - name: Upload Public Preview Release
        uses: softprops/action-gh-release@v1
        with:
          name: PublicPreview ${{ steps.version.outputs.version }}
          tag_name: PublicPreview/${{ steps.version.outputs.version }}
          files: |
            ./samples/StaticHtmlComposites/dist/callComposite.js
            ./samples/StaticHtmlComposites/dist/chatComposite.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Publish package
      - name: Package packages for release
        run: npm pack
        working-directory: ./packages/communication-react

      # Deploy npm package - this is done by uploading to Azure's SDK blob storage then triggering their partner release pipeline.
      # More info: https://dev.azure.com/azure-sdk/internal/_wiki/wikis/internal.wiki/1/Partner-Release-Pipeline
      - name: Upload tarball to blob storage
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az login --service-principal -u ${{ secrets.AZURESDKPARTNERDROPS_CLIENT_ID }} -p ${{ secrets.AZURESDKPARTNERDROPS_SERVICE_PRINCIPAL_KEY }} --tenant ${{ secrets.AZURESDKPARTNERDROPS_TENANT_ID }}
            az extension add --name storage-preview
            az storage azcopy blob upload -s "packages/communication-react/release/*" -c "drops/azure-communication-services/react/npm/${{ steps.version.outputs.version }}" --account-name azuresdkpartnerdrops

      - name: Install github actions dependencies
        run: npm ci
        working-directory: ./.github/workflows/azure-pipeline-action-fork

      - name: Trigger package release pipeline
        uses: ./.github/workflows/azure-pipeline-action-fork
        with:
          azure-devops-project-url: 'https://dev.azure.com/azure-sdk/internal'
          azure-pipeline-name: 'azuresdkpartnerdrops to npm'
          azure-devops-token: '${{ secrets.AZURE_SDK_RELEASE_PIPELINE_DEVOPS_TOKEN }}'
          azure-pipeline-variables: '{"accessLevel": "public", "BlobPath": "azure-communication-services/react/npm/${{ steps.version.outputs.version }}", "registry": "https://registry.npmjs.org/", "skipDiff": "False", "tag": "${{ github.event.inputs.npm-tag }}"}'
