# create release branch from pre-release branch
name: Create release branch from pre-release branch

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Pre-release branch to release from'
        type: string
        required: true

jobs:
  create_release:
    if: ${{ startsWith(github.event.inputs.branch, 'prerelease') }}
    name: Create release branch
    runs-on: ubuntu-latest
    steps:
      # Check-out repo
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          # Use a machine account when checking out. This is to workaround the issue were GitHub
          # actions, when using the default account, cannot trigger other actions. And we want this
          # action to trigger the regular CI pipeline on the created branch.
          # This machine account is only for this PAT, pwd was created and thrown away
          # If any update needed, create a new account, add access to the repo and generate a new PAT
          token: ${{ secrets.MACHINE_ACCOUNT_PAT }}

      # Setup bot information for creating pull request
      # Here we use the id from the github actions bot: https://api.github.com/users/better-informatics%5Bbot%5D
      - name: Setup bot git information
        run: |
          echo "running generation of release branch from ${{github.event.inputs.branch}}"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"

      # Check out onto desired branch or tag to create release from
      - name: Checkout tag/branch
        run: git checkout ${{ github.event.inputs.branch }}

      # Ensure node version is great enough
      - name: Use Node.js v14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      # get version number from communication react folder
      - name: Retrieve new version from package.json
        id: version
        run: |
          ver=$(jq -r .version packages/communication-react/package.json)
          echo version: $ver
          echo "::set-output name=version::$ver"

      # Create new release branch
      - name: Hop into new branch
        id: releasebranch
        run: |
          git checkout -b release/${{ steps.version.outputs.version }}
          echo "::set-output name=releasebranch::release/${{ steps.version.outputs.version }}"

      # Choose stable dependency for sdk
      - name: Choose stable dependency for sdk if stable
        if: ${{ startsWith(github.event.inputs.branch, 'prerelease-stable-minor') || startsWith(github.event.inputs.branch, 'prerelease-stable-patch')}}
        run: node common/scripts/choose-stable-sdk-deps.js

      - name: Choose beta dependency for sdk if beta
        if: ${{ startsWith(github.event.inputs.branch, 'prerelease-beta' )}}
        run: node common/scripts/choose-beta-sdk-deps.js

      # Synchronize the telemetry package versions.
      - name: Synchronize package version reported to telemetry
        run: node common/scripts/sync-telemetry-package-version

      # we will want to run rush changelog with type none make sure that all packlets have change files
      - name: Add beachball changelog
        run: node common/config/node_modules/beachball/bin/beachball.js change -m Create release branch and update SDK versions --type none

      # Commit new dependencies
      - name: Commit changes
        run: |
          git add .
          git commit -m "Selected stable sdk's for release branch"
          git push -u origin ${{ steps.releasebranch.outputs.releasebranch }}

      # Checkout back to pre-release branch
      - name: Hop back to pre-release branch
        run: git checkout ${{ github.event.inputs.branch }}

      - name: Create pull request for pre-release back to main
        run: |
          curl \
            -X POST \
            -H 'Accept: application/vnd.github.v3+json' \
            -H 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            https://api.github.com/repos/Azure/communication-ui-library/pulls \
            -d '{ "title":"${{ steps.version.outputs.version }} release branch", "head":"${{ github.event.inputs.branch }}", "base":"main", "body":"Merge prerelease branch back into main. Version: ${{ steps.version.outputs.version }}. Created by the `Create release branch - create` GitHub action. Please review." }'
