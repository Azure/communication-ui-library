name: Private Preview Release

on:
  release:
    types: [created]

jobs:
  release:
    name: upload_release
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE so job can access it
      - uses: actions/checkout@v2

      # Ensure node version is great enough
      - name: Use Node.js v12.x
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      # Install dependencies
      - name: Install rush
        run: npm install -g @microsoft/rush
      - name: Install dependencies
        run: rush install

      # Builds
      - name: Build Packages and Samples
        run: rush build

      # Package up artifacts for release
      - name: Package Group Calling Sample Artifact
        run: rushx package
        working-directory: ./samples/Calling

      - name: Package Group Chat Sample Artifact
        run: rushx package
        working-directory: ./samples/Chat

      - name: Package Private-Preview Artifact
        run: npm pack
        working-directory: ./packages/communication-ui/

      # Todo: move chat and groupcall samples to deploy in the same way as one-to-one
      - name: Archive builds
        run: |
          7z a group-calling.zip ./samples/Calling/dist/*
          7z a group-chat.zip ./samples/Chat/dist/*
          7z a private-preview.zip ./packages/communication-ui/private-preview/*

      # Get datetime to name and tag the releases with.
      - name: Get Release names
        id: releasenames
        run: |
          echo "::set-output name=tagname::$(TZ=":America/Vancouver" date +'%Y-%m-%d-%H%M')"
          echo "::set-output name=releasename::$(TZ=":America/Vancouver" date +'%Y-%m-%d-%H%M')"

      # Upload releases
      - name: Upload Private Preview Release
        uses: softprops/action-gh-release@v1
        with:
          name: PrivatePreview ${{ steps.releasenames.outputs.releasename }}
          tag_name: Release/${{ steps.releasenames.outputs.tagname }}
          # Todo: move chat and groupcall samples to deploy in the same way as one-to-one
          files: |
            group-calling.zip
            group-chat.zip
            private-preview.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
