name: Manual Alpha Package Release

on:
  # Allows running workflow manually from the GitHub Actions tab
  workflow_dispatch:

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      # Check-out repo
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Ensure node version is great enough
      - name: Use Node.js v12.x
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      # Install dependencies
      - name: Install rush
        run: npm install -g @microsoft/rush
      - name: Install dependencies
        run: rush install

      # Get datetime
      - name: Get datetime for alpha release name
        id: datetime
        run: |
          echo "::set-output name=datetime::$(date +'%Y%m%d.%H%M')"

      # Bump alpha package versions
      - name: Bump alpha package versions
        run: node common/config/node_modules/beachball/bin/beachball canary --canary-name alpha-${{ steps.datetime.outputs.datetime }} --tag dev --no-publish

      # Build packages
      - name: Build @azure/communication-react package
        run: rush build -t @azure/communication-react

      # Test Packages
      - name: Test @azure/communication-react package
        run: rush test -t @azure/communication-react

      # Retrieve new version to tag and publish release with
      - name: Retrieve new version from package.json
        id: version
        run: |
          ver=$(jq -r .version packages/communication-react/package.json)
          echo version: $ver
          echo "::set-output name=version::$ver"

      # Push git tags
      - name: Create and push git tags
        run: |
          git tag ${{ steps.version.outputs.version }}
          git push --tags

      # Publish package
      - name: Package alpha packages for release
        run: npm pack
        working-directory: ./packages/communication-react

      # Deploy npm package - this is done by uploading to Azure's SDK blob storage then triggering their partner release pipeline.
      # More info: https://dev.azure.com/azure-sdk/internal/_wiki/wikis/internal.wiki/1/Partner-Release-Pipeline
      - name: Upload tarball to blob storage
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az login --service-principal -u ${{ secrets.AZURESDKPARTNERDROPS_CLIENT_ID }} -p ${{ secrets.AZURESDKPARTNERDROPS_SERVICE_PRINCIPAL_KEY }} --tenant ${{ secrets.AZURESDKPARTNERDROPS_TENANT_ID }}
            az extension add --name storage-preview
            az storage azcopy blob upload -s "packages/communication-react/release/*" -c "drops/azure-communication-services/react/npm/${{ steps.version.outputs.version }}" --account-name azuresdkpartnerdrops

      - name: Install github actions dependencies
        run: npm ci
        working-directory: ./.github/workflows/azure-pipeline-action-fork

      - name: Trigger alpha package release pipeline
        uses: ./.github/workflows/azure-pipeline-action-fork
        with:
          azure-devops-project-url: 'https://dev.azure.com/azure-sdk/internal'
          azure-pipeline-name: 'azuresdkpartnerdrops to npm'
          azure-devops-token: '${{ secrets.AZURE_SDK_RELEASE_PIPELINE_DEVOPS_TOKEN }}'
          azure-pipeline-variables: '{"accessLevel": "public", "BlobPath": "azure-communication-services/react/npm/${{ steps.version.outputs.version }}", "registry": "https://registry.npmjs.org/", "skipDiff": "False", "tag": "dev"}'
