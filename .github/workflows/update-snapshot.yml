name: Update snapshots

on:
  # Run any time when a new label added to the PR
  pull_request:
    types: [opened, synchronize, reopened, labeled]
  workflow_dispatch:

jobs:
  update_examples_snapshot:
    name: Update component examples snapshot by label
    # This job will only run if the comment was on a pull requests and matches the label
    if: ${{ github.event.label.name == 'ui change' || contains( github.event.pull_request.labels.*.name, 'ui change') || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      # Checkout repo
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          # Use a machine account when checking out. This is to workaround the issue were GitHub
          # actions, when using the default account, cannot trigger other actions.
          # This machine account is only for this PAT, pwd was created and thrown away
          # If any update needed, create a new account, add access to the repo and generate a new PAT
          token: ${{ secrets.MACHINE_ACCOUNT_PAT }}
      # Setup bot information for pushing new changes
      # Here we use the id from the github actions bot: https://api.github.com/users/better-informatics%5Bbot%5D
      - name: Setup bot git information
        run: |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
      # If run from a PR, checkout PR branch and merge in latest changes from main branch
      - name: Checkout PR branch and merge main
        if: ${{ github.event_name != 'workflow_dispatch' }}
        run: |
          git checkout ${{ github.event.pull_request.head.ref }}
          git merge origin/main

      # Ensure node version is great enough
      - name: Use Node.js v14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      # Try get node_modules from cache
      - name: Restore node_modules from cache
        uses: actions/cache@v2
        with:
          path: common/temp/pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('common/config/rush/pnpm-lock.yaml') }}
      # Install dependencies
      - name: Install rush
        run: npm install -g @microsoft/rush@5.47.0
      - name: Install dependencies
        run: rush install
      - name: Build Packages
        run: rush build -t @azure/communication-react
      - name: Build
        run: rush build -t component-examples
      - name: Update snapshot
        run: |
          cd samples/tests
          rushx update:snapshot:examples
        env:
          CONNECTION_STRING: ${{ secrets.CONNECTION_STRING }}
      # Check if files have changed
      # More information see: https://stackoverflow.com/questions/3878624/how-do-i-programmatically-determine-if-there-are-uncommitted-changes
      - name: Check for snapshot changes
        id: changescheck
        run: |
          if [[ -z $(git status -s) ]]
          then
            echo "::set-output name=hasChanged::false"
          else
            echo "::set-output name=hasChanged::true"
            exit
          fi
      - name: Commit new snapshots
        if: ${{ steps.changescheck.outputs.hasChanged == 'true' }}
        run: |
          git add samples/tests/ComponentExamples
          git commit -m 'Update js bundle automation snapshots'
          git push

  update_bundle_snapshot:
    name: Update embed html bundle snapshot by label
    # This job will only run if the comment was on a pull requests and matches the label
    if: ${{ github.event.label.name == 'ui change' || contains( github.event.pull_request.labels.*.name, 'ui change') || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      # Checkout repo
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          # Use a machine account when checking out. This is to workaround the issue were GitHub
          # actions, when using the default account, cannot trigger other actions.
          # This machine account is only for this PAT, pwd was created and thrown away
          # If any update needed, create a new account, add access to the repo and generate a new PAT
          token: ${{ secrets.MACHINE_ACCOUNT_PAT }}
      # Setup bot information for pushing new changes
      # Here we use the id from the github actions bot: https://api.github.com/users/better-informatics%5Bbot%5D
      - name: Setup bot git information
        run: |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
      # If run from a PR, checkout PR branch and merge in latest changes from main branch
      - name: Checkout PR branch and merge main
        if: ${{ github.event_name != 'workflow_dispatch' }}
        run: |
          git checkout ${{ github.event.pull_request.head.ref }}
          git merge origin/main

      # Ensure node version is great enough
      - name: Use Node.js v14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      # Try get node_modules from cache
      - name: Restore node_modules from cache
        uses: actions/cache@v2
        with:
          path: common/temp/pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('common/config/rush/pnpm-lock.yaml') }}
      # Install dependencies
      - name: Install rush
        run: npm install -g @microsoft/rush@5.47.0
      - name: Install dependencies
        run: rush install
      - name: Build Packages
        run: rush build -t @azure/communication-react
      - name: Build
        run: rush build -t sample-static-html-composites
      - name: Update snapshot
        run: |
          cd samples/tests
          rushx update:snapshot:bundle
        env:
          CONNECTION_STRING: ${{ secrets.CONNECTION_STRING }}
      # Check if files have changed
      # More information see: https://stackoverflow.com/questions/3878624/how-do-i-programmatically-determine-if-there-are-uncommitted-changes
      - name: Check for snapshot changes
        id: changescheck
        run: |
          if [[ -z $(git status -s) ]]
          then
            echo "::set-output name=hasChanged::false"
          else
            echo "::set-output name=hasChanged::true"
            exit
          fi
      - name: Commit new snapshots
        if: ${{ steps.changescheck.outputs.hasChanged == 'true' }}
        run: |
          git add samples/tests/StaticHtmlComposites
          git commit -m 'Update js bundle automation snapshots'
          git push

  update_composite_snapshot:
    name: Update composite snapshot by label
    # This job will only run if the comment was on a pull requests and matches the label
    if: ${{ github.event.label.name == 'ui change' || contains( github.event.pull_request.labels.*.name, 'ui change') || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      # Checkout repo
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          # Use a machine account when checking out. This is to workaround the issue were GitHub
          # actions, when using the default account, cannot trigger other actions.
          # This machine account is only for this PAT, pwd was created and thrown away
          # If any update needed, create a new account, add access to the repo and generate a new PAT
          token: ${{ secrets.MACHINE_ACCOUNT_PAT }}
      # Setup bot information for pushing new changes
      # Here we use the id from the github actions bot: https://api.github.com/users/better-informatics%5Bbot%5D
      - name: Setup bot git information
        run: |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
      # If run from a PR, checkout PR branch and merge in latest changes from main branch
      - name: Checkout PR branch and merge main
        if: ${{ github.event_name != 'workflow_dispatch' }}
        run: |
          git checkout ${{ github.event.pull_request.head.ref }}
          git merge origin/main
      # Ensure node version is great enough
      - name: Use Node.js v14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      # Try get node_modules from cache
      - name: Restore node_modules from cache
        uses: actions/cache@v2
        with:
          path: common/temp/pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('common/config/rush/pnpm-lock.yaml') }}
      # Install dependencies
      - name: Install rush
        run: npm install -g @microsoft/rush@5.47.0
      - name: Install dependencies
        run: rush install
      - name: Build Test
        working-directory: ./packages/react-composites
        run: rushx build:e2e
      - name: Update snapshot
        run: rushx test:e2e:update
        working-directory: ./packages/react-composites
        env:
          CONNECTION_STRING: ${{ secrets.CONNECTION_STRING }}
      # Check if files have changed
      # More information see: https://stackoverflow.com/questions/3878624/how-do-i-programmatically-determine-if-there-are-uncommitted-changes
      - name: Check for snapshot changes
        id: changescheck
        run: |
          if [[ -z $(git status -s) ]]
          then
            echo "::set-output name=hasChanged::false"
          else
            echo "::set-output name=hasChanged::true"
            exit
          fi
      - name: Commit new snapshots
        if: ${{ steps.changescheck.outputs.hasChanged == 'true' }}
        run: |
          git add packages/react-composites/tests
          git commit -m 'Update composite automation snapshots'
          git push
