{
  "$schema": "https://developer.microsoft.com/json-schemas/rush/v5/command-line.schema.json",
  "commands": [
    {
      "commandKind": "global",
      "name": "prettier",
      "summary": "Used by the pre-commit Git hook. This command invokes Prettier to reformat staged changes.",
      "autoinstallerName": "rush-prettier",
      "shellCommand": "pretty-quick --staged",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "global",
      "name": "changelog",
      "summary": "Generate change files",
      "shellCommand": "node common/scripts/changelog/change.mjs",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "global",
      "name": "ensure-consistent-versions",
      "summary": "Ensure that package versions for released artifacts are consistent",
      "description": "Ensure that package versions for released artifacts are consistent.",
      "shellCommand": "node common/scripts/ensure-consistent-versions.js",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "global",
      "name": "switch-flavor:beta",
      "summary": "Switch flavor to beta",
      "description": "Every build and test command will run based on beta version.",
      "autoinstallerName": "rush-cpy",
      "shellCommand": "rush install && cpy --flat common/config/env/beta.env common/config/env --rename .env && node common/scripts/invalidate-build.js",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "global",
      "name": "sb",
      "summary": "SHORTNAME: switch-flavor:beta",
      "description": "SHORTNAME: switch-flavor:beta",
      "shellCommand": "rush switch-flavor:beta",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "global",
      "name": "switch-flavor:beta-release",
      "summary": "Switch flavor to beta release mode (strip out in-progress features)",
      "description": "Every build and test command will run based on beta version.",
      "autoinstallerName": "rush-cpy",
      "shellCommand": "rush switch-flavor:beta && cpy --flat common/config/env/beta-release.env common/config/env --rename .env",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "global",
      "name": "sbr",
      "summary": "SHORTNAME: switch-flavor:beta-release",
      "description": "SHORTNAME: switch-flavor:beta-release",
      "shellCommand": "rush switch-flavor:beta-release",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "global",
      "name": "switch-flavor:stable",
      "summary": "Switch flavor to stable",
      "description": "Every build and test command will run based on stable version.",
      "autoinstallerName": "rush-cpy",
      "shellCommand": "rush install --variant stable && cpy --flat common/config/env/stable.env common/config/env --rename .env && node common/scripts/invalidate-build.js",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "global",
      "name": "ss",
      "summary": "SHORTNAME: switch-flavor:stable",
      "description": "SHORTNAME: switch-flavor:stable",
      "shellCommand": "rush switch-flavor:stable",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "global",
      "name": "update:stable",
      "summary": "Update dependencies for stable version.",
      "description": "Update dependencies for stable version.",
      "shellCommand": "rush update --variant stable",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "global",
      "name": "update:beta",
      "summary": "Update dependencies to beta versions.",
      "description": "Update dependencies to beta versions.",
      "shellCommand": "rush update",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "global",
      "name": "update:all-flavors",
      "summary": "Update dependencies for all flavors",
      "description": "Update dependencies for all flavors.",
      "shellCommand": "rush update && rush update:stable",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "global",
      "name": "update:full",
      "summary": "Update dependencies for all build flavours to latest SemVers.",
      "description": "Deprecated; dependencies need to be carefully updated using `rush upgrade-interactive` to avoid breaks",
      "shellCommand": "echo This command has been deprecated. Please use rush update:all-flavors.",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "global",
      "name": "u",
      "summary": "SHORTNAME: update",
      "description": "SHORTNAME: update",
      "shellCommand": "rush update",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "global",
      "name": "us",
      "summary": "SHORTNAME: update:stable",
      "description": "SHORTNAME: update:stable",
      "shellCommand": "rush update:stable",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "global",
      "name": "ub",
      "summary": "SHORTNAME: update:beta",
      "description": "SHORTNAME: update:beta",
      "shellCommand": "rush update:beta",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "global",
      "name": "build:all-flavors",
      "summary": "Build all packages for all flavors in one command",
      "description": "Build all packages for all flavors in one command. This command will switch current flavor to beta.",
      "shellCommand": "(rush switch-flavor:stable && rush rebuild) || rush switch-flavor:beta && rush rebuild",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "global",
      "name": "baf",
      "summary": "SHORTNAME: build:all-flavors",
      "description": "SHORTNAME: build:all-flavors",
      "shellCommand": "rush build:all-flavors",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "global",
      "name": "build-api:all-flavors",
      "summary": "Build all packages in all flavors, excluding samples and storybook, to update api files",
      "description": "Build all packages in all flavors in one command, excluding samples and storybook, to update api files. This command will switch current flavor to beta.",
      "shellCommand": "(rush switch-flavor:stable && rush rebuild -t @azure/communication-react) || rush switch-flavor:beta && rush rebuild -t @azure/communication-react",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "global",
      "name": "bapi",
      "summary": "SHORTNAME: build-api:all-flavors",
      "description": "SHORTNAME: build-api:all-flavors",
      "shellCommand": "rush build-api:all-flavors",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "global",
      "name": "generate-api-diff",
      "summary": "Generate two api files for a supplied feature name",
      "description": "Supply a feature name and this command will generate two api files under <repo-root>/api. The first file `baseline.api.json` is the @azure/communication-react API result on the current branch with the supplied feature removed. The second file is `feature.api.json` and is the @azure/communication-react API result with the feature included. The two files can then be uploaded to APIView.dev for comparing the API difference with the supplied feature enabled. This is particularly useful for generating an API view for ARB reviews.",
      "shellCommand": "node common/scripts/generate-api-diff.mjs",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "global",
      "name": "stage-feature",
      "summary": "Promote/demote a beta feature to/from alpha or stable",
      "description": "Supply a feature name and an option and adjust the features.js file to appropriately promote/demote the feature.",
      "shellCommand": "node common/scripts/stage-feature.mjs",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "bulk",
      "name": "build",
      "summary": "Build all projects that haven't been built, or have changed since they were last built",
      "description": "This command is similar to \"rush rebuild\", except this will only return non-zero when error happens not warnings.",
      "safeForSimultaneousRushProcesses": false,
      "enableParallelism": true,
      "ignoreDependencyOrder": false,
      "ignoreMissingScript": false,
      "allowWarningsInSuccessfulBuild": true
    },
    {
      "commandKind": "global",
      "name": "b",
      "summary": "SHORTNAME: build",
      "description": "SHORTNAME: build",
      "shellCommand": "rush build",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "bulk",
      "name": "build:minify",
      "summary": "Primiarily used for samples. Build all projects that haven't been built, or have changed since they were last built using minified code",
      "description": "This command is similar to \"rush build\", except this will minify sample projects.",
      "safeForSimultaneousRushProcesses": false,
      "enableParallelism": true,
      "ignoreDependencyOrder": false,
      "ignoreMissingScript": false,
      "allowWarningsInSuccessfulBuild": true
    },
    {
      "commandKind": "bulk",
      "name": "test",
      "summary": "Run tests in each project.",
      "description": "Run jest tests in each project.",
      "enableParallelism": true,
      "allowWarningsInSuccessfulBuild": true,
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "bulk",
      "name": "test:ci-coverage",
      "summary": "Run tests coverage for CI in each project.",
      "description": "Run tests coverage for CI in each project.",
      "enableParallelism": true,
      "allowWarningsInSuccessfulBuild": true,
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "bulk",
      "name": "lint",
      "summary": "Run linting in each project.",
      "description": "Run lint in each project.",
      "enableParallelism": true,
      "allowWarningsInSuccessfulBuild": false,
      "ignoreDependencyOrder": true,
      "incremental": false,
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "bulk",
      "name": "lint:fix",
      "summary": "Run lint:fix in each project.",
      "enableParallelism": true,
      "allowWarningsInSuccessfulBuild": true,
      "ignoreDependencyOrder": true,
      "incremental": false,
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "bulk",
      "name": "build:watch",
      "summary": "Trigger incremental build with watch command.",
      "enableParallelism": false,
      "watchForChanges": true
    },
    {
      "commandKind": "bulk",
      "name": "prettier:check",
      "summary": "Check prettier formatting in each project.",
      "description": "Check prettier formatting in each project.",
      "enableParallelism": true,
      "allowWarningsInSuccessfulBuild": true,
      "ignoreDependencyOrder": true,
      "incremental": false,
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "bulk",
      "name": "clean",
      "summary": "Delete build artifacts in each project.",
      "description": "Delete build artifacts in each project.",
      "enableParallelism": true,
      "allowWarningsInSuccessfulBuild": true,
      "safeForSimultaneousRushProcesses": true
    }
  ],
  "parameters": [
    {
      "parameterKind": "string",
      "longName": "--feature",
      "shortName": "-f",
      "required": true,
      "argumentName": "FEATURE_NAME",
      "description": "Feature name. Note: This must match the name given in features.js",
      "associatedCommands": ["generate-api-diff", "stage-feature"]
    },
    {
      "parameterKind": "string",
      "longName": "--option",
      "shortName": "-o",
      "required": true,
      "argumentName": "OPTION",
      "description": "Option to promote/demote a feature. Options: 'alphaToBeta', 'betaToAlpha', 'betaToStable', 'stableToBeta'",
      "associatedCommands": ["stage-feature"]
    }
  ]
}
