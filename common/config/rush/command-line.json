{
  "$schema": "https://developer.microsoft.com/json-schemas/rush/v5/command-line.schema.json",
  "commands": [
    {
      "commandKind": "global",
      "name": "prettier",
      "summary": "Used by the pre-commit Git hook. This command invokes Prettier to reformat staged changes.",
      "autoinstallerName": "rush-prettier",
      "shellCommand": "pretty-quick --staged",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "global",
      "name": "changelog",
      "summary": "Runs beachball change",
      "shellCommand": "node common/config/node_modules/beachball/bin/beachball",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "global",
      "name": "changelog:check",
      "summary": "Checks change files have been generated",
      "shellCommand": "node common/config/node_modules/beachball/bin/beachball check",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "global",
      "name": "ensure-consistent-versions",
      "summary": "Ensure that package versions for released artifacts are consistent",
      "description": "Ensure that package versions for released artifacts are consistent.",
      "shellCommand": "node common/scripts/ensure-consistent-versions.js",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "global",
      "name": "switch-flavor:beta",
      "summary": "Switch flavor to beta",
      "description": "Every build and test command will run based on beta version.",
      "autoinstallerName": "rush-cpy",
      "shellCommand": "rush install && cpy common/config/env/beta.env common/config/env --rename .env && node common/scripts/invalidate-build.js",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "global",
      "name": "switch-flavor:stable",
      "summary": "Switch flavor to stable",
      "description": "Every build and test command will run based on stable version.",
      "autoinstallerName": "rush-cpy",
      "shellCommand": "rush install --variant stable && cpy common/config/env/stable.env common/config/env --rename .env && node common/scripts/invalidate-build.js",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "global",
      "name": "update:stable",
      "summary": "Update dependencies for stable version.",
      "description": "Update dependencies for stable version.",
      "shellCommand": "rush update --variant stable",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "global",
      "name": "install:stable",
      "summary": "Install dependencies for stable version.",
      "description": "Install dependencies for stable version.",
      "shellCommand": "rush install --variant stable",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "global",
      "name": "build:all-flavors",
      "summary": "Build all packages for all flavors in one command",
      "description": "Build all packages for all flavors in one command. This command will switch current flavor to beta.",
      "shellCommand": "(rush switch-flavor:stable && rush rebuild) || rush switch-flavor:beta && rush rebuild",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "global",
      "name": "build-api:all-flavors",
      "summary": "Build all packages in all flavors, excluding samples and storybook, to update api files",
      "description": "Build all packages in all flavors in one command, excluding samples and storybook, to update api files. This command will switch current flavor to beta.",
      "shellCommand": "(rush switch-flavor:stable && rush rebuild -t @azure/communication-react) || rush switch-flavor:beta && rush rebuild -t @azure/communication-react",
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "bulk",
      "name": "test",
      "summary": "Run tests in each project.",
      "description": "Run jest tests in each project.",
      "enableParallelism": true,
      "allowWarningsInSuccessfulBuild": true,
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "bulk",
      "name": "lint",
      "summary": "Run linting in each project.",
      "description": "Run lint in each project.",
      "enableParallelism": true,
      "allowWarningsInSuccessfulBuild": false,
      "ignoreDependencyOrder": true,
      "incremental": false,
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "bulk",
      "name": "lint:fix",
      "summary": "Run lint:fix in each project.",
      "enableParallelism": true,
      "allowWarningsInSuccessfulBuild": true,
      "ignoreDependencyOrder": true,
      "incremental": false,
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "bulk",
      "name": "build:watch",
      "summary": "Trigger incremental build with watch command.",
      "enableParallelism": false,
      "watchForChanges": true
    },
    {
      "commandKind": "bulk",
      "name": "prettier:check",
      "summary": "Check prettier formatting in each project.",
      "description": "Check prettier formatting in each project.",
      "enableParallelism": true,
      "allowWarningsInSuccessfulBuild": true,
      "ignoreDependencyOrder": true,
      "incremental": false,
      "safeForSimultaneousRushProcesses": true
    },
    {
      "commandKind": "bulk",
      "name": "clean",
      "summary": "Delete build artifacts in each project.",
      "description": "Delete build artifacts in each project.",
      "enableParallelism": true,
      "allowWarningsInSuccessfulBuild": true,
      "safeForSimultaneousRushProcesses": true
    }
  ],
  "parameters": []
}
