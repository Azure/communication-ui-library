{"version":3,"file":"StringChecks.js","sourceRoot":"","sources":["../../src/analyzer/StringChecks.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;;;;;;;;;;;;;;;;;;;;AAE3D,+CAAiC;AAEjC;;GAEG;AACH,MAAa,YAAY;IACvB;;;;;;;;;;;;;;;;OAgBG;IACI,MAAM,CAAC,8BAA8B,CAAC,UAAkB;QAC7D,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;YAC3B,OAAO,KAAK,CAAC,CAAC,kBAAkB;SACjC;QAED,IAAI,CAAC,EAAE,CAAC,iBAAiB,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE;YACxE,OAAO,KAAK,CAAC;SACd;QAED,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClD,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE;gBACvE,OAAO,KAAK,CAAC;aACd;SACF;QAED,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AAnCD,oCAmCC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as ts from 'typescript';\r\n\r\n/**\r\n * Helpers for validating various text string formats.\r\n */\r\nexport class StringChecks {\r\n  /**\r\n   * Tests whether the input string is safe to use as an ECMAScript identifier without quotes.\r\n   *\r\n   * @remarks\r\n   * For example:\r\n   *\r\n   * ```ts\r\n   * class X {\r\n   *   public okay: number = 1;\r\n   *   public \"not okay!\": number = 2;\r\n   * }\r\n   * ```\r\n   *\r\n   * A precise check is extremely complicated and highly dependent on the ECMAScript standard version\r\n   * and how faithfully the interpreter implements it.  To keep things simple, `isSafeUnquotedMemberIdentifier()`\r\n   * conservatively accepts any identifier that would be valid with ECMAScript 5, and returns false otherwise.\r\n   */\r\n  public static isSafeUnquotedMemberIdentifier(identifier: string): boolean {\r\n    if (identifier.length === 0) {\r\n      return false; // cannot be empty\r\n    }\r\n\r\n    if (!ts.isIdentifierStart(identifier.charCodeAt(0), ts.ScriptTarget.ES5)) {\r\n      return false;\r\n    }\r\n\r\n    for (let i: number = 1; i < identifier.length; i++) {\r\n      if (!ts.isIdentifierPart(identifier.charCodeAt(i), ts.ScriptTarget.ES5)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n"]}