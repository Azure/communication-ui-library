{"version":3,"file":"ApiExtractorCommandLine.js","sourceRoot":"","sources":["../../src/cli/ApiExtractorCommandLine.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;;;;;;;;;;;;;;;;;;;;;;;AAE3D,oDAA4B;AAC5B,uCAAyB;AAEzB,gEAAyF;AACzF,oEAA6D;AAE7D,2CAAwC;AACxC,6CAA0C;AAE1C,MAAa,uBAAwB,SAAQ,mCAAiB;IAG5D;QACE,KAAK,CAAC;YACJ,YAAY,EAAE,eAAe;YAC7B,eAAe,EACb,wFAAwF;gBACxF,0GAA0G;gBAC1G,qGAAqG;gBACrG,oGAAoG;gBACpG,wEAAwE;SAC3E,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAES,kBAAkB;QAC1B,WAAW;QACX,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,mBAAmB,CAAC;YAC9C,iBAAiB,EAAE,SAAS;YAC5B,kBAAkB,EAAE,IAAI;YACxB,WAAW,EAAE,sEAAsE;SACpF,CAAC,CAAC;IACL,CAAC;IAES,SAAS;QACjB,WAAW;QACX,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE;YAC9B,iCAAa,CAAC,eAAe,GAAG,IAAI,CAAC;SACtC;QAED,OAAO,KAAK,CAAC,SAAS,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;YACvC,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE;gBAC9B,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;aACrC;iBAAM;gBACL,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,GAAG,gBAAM,CAAC,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;aACtE;YAED,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,gBAAgB;QACtB,IAAI,CAAC,SAAS,CAAC,IAAI,uBAAU,CAAC,IAAI,CAAC,CAAC,CAAC;QACrC,IAAI,CAAC,SAAS,CAAC,IAAI,qBAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IACtC,CAAC;CACF;AA9CD,0DA8CC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport colors from 'colors';\r\nimport * as os from 'os';\r\n\r\nimport { CommandLineParser, CommandLineFlagParameter } from '@rushstack/ts-command-line';\r\nimport { InternalError } from '@rushstack/node-core-library';\r\n\r\nimport { RunAction } from './RunAction';\r\nimport { InitAction } from './InitAction';\r\n\r\nexport class ApiExtractorCommandLine extends CommandLineParser {\r\n  private _debugParameter!: CommandLineFlagParameter;\r\n\r\n  public constructor() {\r\n    super({\r\n      toolFilename: 'api-extractor',\r\n      toolDescription:\r\n        'API Extractor helps you build better TypeScript libraries.  It analyzes the main entry' +\r\n        ' point for your package, collects the inventory of exported declarations, and then generates three kinds' +\r\n        ' of output:  an API report file (.api.md) to facilitate reviews, a declaration rollup (.d.ts) to be' +\r\n        ' published with your NPM package, and a doc model file (.api.json) to be used with a documentation' +\r\n        ' tool such as api-documenter.  For details, please visit the web site.'\r\n    });\r\n    this._populateActions();\r\n  }\r\n\r\n  protected onDefineParameters(): void {\r\n    // override\r\n    this._debugParameter = this.defineFlagParameter({\r\n      parameterLongName: '--debug',\r\n      parameterShortName: '-d',\r\n      description: 'Show the full call stack if an error occurs while executing the tool'\r\n    });\r\n  }\r\n\r\n  protected onExecute(): Promise<void> {\r\n    // override\r\n    if (this._debugParameter.value) {\r\n      InternalError.breakInDebugger = true;\r\n    }\r\n\r\n    return super.onExecute().catch((error) => {\r\n      if (this._debugParameter.value) {\r\n        console.error(os.EOL + error.stack);\r\n      } else {\r\n        console.error(os.EOL + colors.red('ERROR: ' + error.message.trim()));\r\n      }\r\n\r\n      process.exitCode = 1;\r\n    });\r\n  }\r\n\r\n  private _populateActions(): void {\r\n    this.addAction(new InitAction(this));\r\n    this.addAction(new RunAction(this));\r\n  }\r\n}\r\n"]}