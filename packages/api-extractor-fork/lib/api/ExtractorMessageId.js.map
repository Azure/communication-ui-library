{"version":3,"file":"ExtractorMessageId.js","sourceRoot":"","sources":["../../src/api/ExtractorMessageId.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAmG9C,QAAA,sBAAsB,GAAgB,IAAI,GAAG,CAAS;IACjE,sBAAsB;IACtB,2BAA2B;IAC3B,8BAA8B;IAC9B,wBAAwB;IACxB,0BAA0B;IAC1B,qBAAqB;IACrB,gCAAgC;IAChC,+BAA+B;IAC/B,iCAAiC;IACjC,gCAAgC;IAChC,oCAAoC;IACpC,+BAA+B;IAC/B,uBAAuB;IACvB,oBAAoB;IACpB,qBAAqB;IACrB,mBAAmB;CACpB,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\n/**\r\n * Unique identifiers for messages reported by API Extractor during its analysis.\r\n *\r\n * @remarks\r\n *\r\n * These strings are possible values for the {@link ExtractorMessage.messageId} property\r\n * when the `ExtractorMessage.category` is {@link ExtractorMessageCategory.Extractor}.\r\n *\r\n * @public\r\n */\r\nexport const enum ExtractorMessageId {\r\n  /**\r\n   * \"The doc comment should not contain more than one release tag.\"\r\n   */\r\n  ExtraReleaseTag = 'ae-extra-release-tag',\r\n\r\n  /**\r\n   * \"This symbol has another declaration with a different release tag.\"\r\n   */\r\n  DifferentReleaseTags = 'ae-different-release-tags',\r\n\r\n  /**\r\n   * \"The symbol ___ is marked as ___, but its signature references ___ which is marked as ___.\"\r\n   */\r\n  IncompatibleReleaseTags = 'ae-incompatible-release-tags',\r\n\r\n  /**\r\n   * \"___ is exported by the package, but it is missing a release tag (`@alpha`, `@beta`, `@public`, or `@internal`).\"\r\n   */\r\n  MissingReleaseTag = 'ae-missing-release-tag',\r\n\r\n  /**\r\n   * \"The `@packageDocumentation` comment must appear at the top of entry point *.d.ts file.\"\r\n   */\r\n  MisplacedPackageTag = 'ae-misplaced-package-tag',\r\n\r\n  /**\r\n   * \"The symbol ___ needs to be exported by the entry point ___.\"\r\n   */\r\n  ForgottenExport = 'ae-forgotten-export',\r\n\r\n  /**\r\n   * \"The name ___ should be prefixed with an underscore because the declaration is marked as `@internal`.\"\r\n   */\r\n  InternalMissingUnderscore = 'ae-internal-missing-underscore',\r\n\r\n  /**\r\n   * \"Mixed release tags are not allowed for ___ because one of its declarations is marked as `@internal`.\"\r\n   */\r\n  InternalMixedReleaseTag = 'ae-internal-mixed-release-tag',\r\n\r\n  /**\r\n   * \"The `@preapproved` tag cannot be applied to ___ because it is not a supported declaration type.\"\r\n   */\r\n  PreapprovedUnsupportedType = 'ae-preapproved-unsupported-type',\r\n\r\n  /**\r\n   * \"The `@preapproved` tag cannot be applied to ___ without an `@internal` release tag.\"\r\n   */\r\n  PreapprovedBadReleaseTag = 'ae-preapproved-bad-release-tag',\r\n\r\n  /**\r\n   * \"The `@inheritDoc` reference could not be resolved.\"\r\n   */\r\n  UnresolvedInheritDocReference = 'ae-unresolved-inheritdoc-reference',\r\n\r\n  /**\r\n   * \"The `@inheritDoc` tag needs a TSDoc declaration reference; signature matching is not supported yet.\"\r\n   *\r\n   * @privateRemarks\r\n   * In the future, we will implement signature matching so that you can write `{@inheritDoc}` and API Extractor\r\n   * will find a corresponding member from a base class (or implemented interface).  Until then, the tag\r\n   * always needs an explicit declaration reference such as `{@inhertDoc MyBaseClass.sameMethod}`.\r\n   */\r\n  UnresolvedInheritDocBase = 'ae-unresolved-inheritdoc-base',\r\n\r\n  /**\r\n   * \"The `@inheritDoc` tag for ___ refers to its own declaration.\"\r\n   */\r\n  CyclicInheritDoc = 'ae-cyclic-inherit-doc',\r\n\r\n  /**\r\n   * \"The `@link` reference could not be resolved.\"\r\n   */\r\n  UnresolvedLink = 'ae-unresolved-link',\r\n\r\n  /**\r\n   * \"The doc comment for the property ___ must appear on the getter, not the setter.\"\r\n   */\r\n  SetterWithDocs = 'ae-setter-with-docs',\r\n\r\n  /**\r\n   * \"The property ___ has a setter but no getter.\"\r\n   */\r\n  MissingGetter = 'ae-missing-getter'\r\n}\r\n\r\nexport const allExtractorMessageIds: Set<string> = new Set<string>([\r\n  'ae-extra-release-tag',\r\n  'ae-different-release-tags',\r\n  'ae-incompatible-release-tags',\r\n  'ae-missing-release-tag',\r\n  'ae-misplaced-package-tag',\r\n  'ae-forgotten-export',\r\n  'ae-internal-missing-underscore',\r\n  'ae-internal-mixed-release-tag',\r\n  'ae-preapproved-unsupported-type',\r\n  'ae-preapproved-bad-release-tag',\r\n  'ae-unresolved-inheritdoc-reference',\r\n  'ae-unresolved-inheritdoc-base',\r\n  'ae-cyclic-inherit-doc',\r\n  'ae-unresolved-link',\r\n  'ae-setter-with-docs',\r\n  'ae-missing-getter'\r\n]);\r\n"]}